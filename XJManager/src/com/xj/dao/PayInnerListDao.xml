<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd" >
<mapper namespace="com.xj.dao.PayInnerListDao" >
  <resultMap id="BaseResultMap" type="com.xj.domain.account.PayInnerList" >
    <id column="pay_in_id" property="payInId" jdbcType="INTEGER" />
    <result column="pay_in_product_name" property="payInProductName" jdbcType="VARCHAR" />
    <result column="pay_in_no_incom" property="payInNoIncom" jdbcType="DECIMAL" />
    <result column="pay_in_purchases" property="payInPurchases" jdbcType="DECIMAL" />
    <result column="pay_in_price" property="payInPrice" jdbcType="DECIMAL" />
    <result column="pay_pi_id" property="payPiId" jdbcType="INTEGER" />
    <result column="pay_in_fill_no_incom" property="payInFillNoIncom" jdbcType="DECIMAL" />
    <result column="pay_in_fill_purchases" property="payInFillPurchases" jdbcType="DECIMAL" />
    <result column="pay_in_fill_price" property="payInFillPrice" jdbcType="DECIMAL" />
    <result column="pay_in_main" property="payInMain" jdbcType="INTEGER" />
    <result column="pay_in_buy" property="payInBuy" jdbcType="INTEGER" />
    <result column="pay_in_sale" property="payInSale" jdbcType="INTEGER" />
  </resultMap>
  <sql id="Example_Where_Clause" >
    <where >
      <foreach collection="oredCriteria" item="criteria" separator="or" >
        <if test="criteria.valid" >
          <trim prefix="(" suffix=")" prefixOverrides="and" >
            <foreach collection="criteria.criteria" item="criterion" >
              <choose >
                <when test="criterion.noValue" >
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue" >
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue" >
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue" >
                  and ${criterion.condition}
                  <foreach collection="criterion.value" item="listItem" open="(" close=")" separator="," >
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Update_By_Example_Where_Clause" >
    <where >
      <foreach collection="example.oredCriteria" item="criteria" separator="or" >
        <if test="criteria.valid" >
          <trim prefix="(" suffix=")" prefixOverrides="and" >
            <foreach collection="criteria.criteria" item="criterion" >
              <choose >
                <when test="criterion.noValue" >
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue" >
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue" >
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue" >
                  and ${criterion.condition}
                  <foreach collection="criterion.value" item="listItem" open="(" close=")" separator="," >
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Base_Column_List" >
    <if test="fields == null" >
      pay_in_id, pay_in_product_name, pay_in_no_incom, pay_in_purchases, pay_in_price, 
      pay_pi_id, pay_in_fill_no_incom, pay_in_fill_purchases, pay_in_fill_price, pay_in_main, 
      pay_in_buy, pay_in_sale
    </if>
    <if test="fields != null" >
      ${fields}
    </if>
  </sql>
  <select id="selectByExample" resultMap="BaseResultMap" parameterType="com.xj.domain.account.PayInnerListQuery" >
    select
    <if test="distinct" >
      distinct
    </if>
    <include refid="Base_Column_List" />
    from pay_inner_list
    <if test="_parameter != null" >
      <include refid="Example_Where_Clause" />
    </if>
    <if test="orderByClause != null" >
      order by ${orderByClause}
    </if>
    <if test="startRow != null" >
      limit #{startRow} , #{pageSize}
    </if>
  </select>
  <select id="selectByPrimaryKey" resultMap="BaseResultMap" parameterType="java.lang.Integer" >
    select 
    pay_in_id,pay_in_product_name,pay_in_no_incom,pay_in_purchases,pay_in_price,pay_pi_id,pay_in_fill_no_incom,pay_in_fill_purchases,pay_in_fill_price,pay_in_main,pay_in_buy,pay_in_sale
    from pay_inner_list
    where pay_in_id = #{payInId,jdbcType=INTEGER}
  </select>
  <delete id="deleteByPrimaryKey" parameterType="java.lang.Integer" >
    delete from pay_inner_list
    where pay_in_id = #{payInId,jdbcType=INTEGER}
  </delete>
  <delete id="deleteByExample" parameterType="com.xj.domain.account.PayInnerListQuery" >
    delete from pay_inner_list
    <if test="_parameter != null" >
      <include refid="Example_Where_Clause" />
    </if>
  </delete>
  <insert id="insert" parameterType="com.xj.domain.account.PayInnerList" >
    insert into pay_inner_list (pay_in_id, pay_in_product_name, pay_in_no_incom, 
      pay_in_purchases, pay_in_price, pay_pi_id, 
      pay_in_fill_no_incom, pay_in_fill_purchases, pay_in_fill_price, 
      pay_in_main, pay_in_buy, pay_in_sale
      )
    values (#{payInId,jdbcType=INTEGER}, #{payInProductName,jdbcType=VARCHAR}, #{payInNoIncom,jdbcType=DECIMAL}, 
      #{payInPurchases,jdbcType=DECIMAL}, #{payInPrice,jdbcType=DECIMAL}, #{payPiId,jdbcType=INTEGER}, 
      #{payInFillNoIncom,jdbcType=DECIMAL}, #{payInFillPurchases,jdbcType=DECIMAL}, #{payInFillPrice,jdbcType=DECIMAL}, 
      #{payInMain,jdbcType=INTEGER}, #{payInBuy,jdbcType=INTEGER}, #{payInSale,jdbcType=INTEGER}
      )
  </insert>
  <insert id="insertSelective" parameterType="com.xj.domain.account.PayInnerList" >
    insert into pay_inner_list
    <trim prefix="(" suffix=")" suffixOverrides="," >
      <if test="payInId != null" >
        pay_in_id,
      </if>
      <if test="payInProductName != null" >
        pay_in_product_name,
      </if>
      <if test="payInNoIncom != null" >
        pay_in_no_incom,
      </if>
      <if test="payInPurchases != null" >
        pay_in_purchases,
      </if>
      <if test="payInPrice != null" >
        pay_in_price,
      </if>
      <if test="payPiId != null" >
        pay_pi_id,
      </if>
      <if test="payInFillNoIncom != null" >
        pay_in_fill_no_incom,
      </if>
      <if test="payInFillPurchases != null" >
        pay_in_fill_purchases,
      </if>
      <if test="payInFillPrice != null" >
        pay_in_fill_price,
      </if>
      <if test="payInMain != null" >
        pay_in_main,
      </if>
      <if test="payInBuy != null" >
        pay_in_buy,
      </if>
      <if test="payInSale != null" >
        pay_in_sale,
      </if>
    </trim>
    <trim prefix="values (" suffix=")" suffixOverrides="," >
      <if test="payInId != null" >
        #{payInId,jdbcType=INTEGER},
      </if>
      <if test="payInProductName != null" >
        #{payInProductName,jdbcType=VARCHAR},
      </if>
      <if test="payInNoIncom != null" >
        #{payInNoIncom,jdbcType=DECIMAL},
      </if>
      <if test="payInPurchases != null" >
        #{payInPurchases,jdbcType=DECIMAL},
      </if>
      <if test="payInPrice != null" >
        #{payInPrice,jdbcType=DECIMAL},
      </if>
      <if test="payPiId != null" >
        #{payPiId,jdbcType=INTEGER},
      </if>
      <if test="payInFillNoIncom != null" >
        #{payInFillNoIncom,jdbcType=DECIMAL},
      </if>
      <if test="payInFillPurchases != null" >
        #{payInFillPurchases,jdbcType=DECIMAL},
      </if>
      <if test="payInFillPrice != null" >
        #{payInFillPrice,jdbcType=DECIMAL},
      </if>
      <if test="payInMain != null" >
        #{payInMain,jdbcType=INTEGER},
      </if>
      <if test="payInBuy != null" >
        #{payInBuy,jdbcType=INTEGER},
      </if>
      <if test="payInSale != null" >
        #{payInSale,jdbcType=INTEGER},
      </if>
    </trim>
  </insert>
  <select id="countByExample" parameterType="com.xj.domain.account.PayInnerListQuery" resultType="java.lang.Integer" >
    select count(*) from pay_inner_list
    <if test="_parameter != null" >
      <include refid="Example_Where_Clause" />
    </if>
  </select>
  <update id="updateByExampleSelective" parameterType="map" >
    update pay_inner_list
    <set >
      <if test="record.payInId != null" >
        pay_in_id = #{record.payInId,jdbcType=INTEGER},
      </if>
      <if test="record.payInProductName != null" >
        pay_in_product_name = #{record.payInProductName,jdbcType=VARCHAR},
      </if>
      <if test="record.payInNoIncom != null" >
        pay_in_no_incom = #{record.payInNoIncom,jdbcType=DECIMAL},
      </if>
      <if test="record.payInPurchases != null" >
        pay_in_purchases = #{record.payInPurchases,jdbcType=DECIMAL},
      </if>
      <if test="record.payInPrice != null" >
        pay_in_price = #{record.payInPrice,jdbcType=DECIMAL},
      </if>
      <if test="record.payPiId != null" >
        pay_pi_id = #{record.payPiId,jdbcType=INTEGER},
      </if>
      <if test="record.payInFillNoIncom != null" >
        pay_in_fill_no_incom = #{record.payInFillNoIncom,jdbcType=DECIMAL},
      </if>
      <if test="record.payInFillPurchases != null" >
        pay_in_fill_purchases = #{record.payInFillPurchases,jdbcType=DECIMAL},
      </if>
      <if test="record.payInFillPrice != null" >
        pay_in_fill_price = #{record.payInFillPrice,jdbcType=DECIMAL},
      </if>
      <if test="record.payInMain != null" >
        pay_in_main = #{record.payInMain,jdbcType=INTEGER},
      </if>
      <if test="record.payInBuy != null" >
        pay_in_buy = #{record.payInBuy,jdbcType=INTEGER},
      </if>
      <if test="record.payInSale != null" >
        pay_in_sale = #{record.payInSale,jdbcType=INTEGER},
      </if>
    </set>
    <if test="_parameter != null" >
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByExample" parameterType="map" >
    update pay_inner_list
    set pay_in_id = #{record.payInId,jdbcType=INTEGER},
      pay_in_product_name = #{record.payInProductName,jdbcType=VARCHAR},
      pay_in_no_incom = #{record.payInNoIncom,jdbcType=DECIMAL},
      pay_in_purchases = #{record.payInPurchases,jdbcType=DECIMAL},
      pay_in_price = #{record.payInPrice,jdbcType=DECIMAL},
      pay_pi_id = #{record.payPiId,jdbcType=INTEGER},
      pay_in_fill_no_incom = #{record.payInFillNoIncom,jdbcType=DECIMAL},
      pay_in_fill_purchases = #{record.payInFillPurchases,jdbcType=DECIMAL},
      pay_in_fill_price = #{record.payInFillPrice,jdbcType=DECIMAL},
      pay_in_main = #{record.payInMain,jdbcType=INTEGER},
      pay_in_buy = #{record.payInBuy,jdbcType=INTEGER},
      pay_in_sale = #{record.payInSale,jdbcType=INTEGER}
    <if test="_parameter != null" >
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByPrimaryKeySelective" parameterType="com.xj.domain.account.PayInnerList" >
    update pay_inner_list
    <set >
      <if test="payInProductName != null" >
        pay_in_product_name = #{payInProductName,jdbcType=VARCHAR},
      </if>
      <if test="payInNoIncom != null" >
        pay_in_no_incom = #{payInNoIncom,jdbcType=DECIMAL},
      </if>
      <if test="payInPurchases != null" >
        pay_in_purchases = #{payInPurchases,jdbcType=DECIMAL},
      </if>
      <if test="payInPrice != null" >
        pay_in_price = #{payInPrice,jdbcType=DECIMAL},
      </if>
      <if test="payPiId != null" >
        pay_pi_id = #{payPiId,jdbcType=INTEGER},
      </if>
      <if test="payInFillNoIncom != null" >
        pay_in_fill_no_incom = #{payInFillNoIncom,jdbcType=DECIMAL},
      </if>
      <if test="payInFillPurchases != null" >
        pay_in_fill_purchases = #{payInFillPurchases,jdbcType=DECIMAL},
      </if>
      <if test="payInFillPrice != null" >
        pay_in_fill_price = #{payInFillPrice,jdbcType=DECIMAL},
      </if>
      <if test="payInMain != null" >
        pay_in_main = #{payInMain,jdbcType=INTEGER},
      </if>
      <if test="payInBuy != null" >
        pay_in_buy = #{payInBuy,jdbcType=INTEGER},
      </if>
      <if test="payInSale != null" >
        pay_in_sale = #{payInSale,jdbcType=INTEGER},
      </if>
    </set>
    where pay_in_id = #{payInId,jdbcType=INTEGER}
  </update>
  <update id="updateByPrimaryKey" parameterType="com.xj.domain.account.PayInnerList" >
    update pay_inner_list
    set pay_in_product_name = #{payInProductName,jdbcType=VARCHAR},
      pay_in_no_incom = #{payInNoIncom,jdbcType=DECIMAL},
      pay_in_purchases = #{payInPurchases,jdbcType=DECIMAL},
      pay_in_price = #{payInPrice,jdbcType=DECIMAL},
      pay_pi_id = #{payPiId,jdbcType=INTEGER},
      pay_in_fill_no_incom = #{payInFillNoIncom,jdbcType=DECIMAL},
      pay_in_fill_purchases = #{payInFillPurchases,jdbcType=DECIMAL},
      pay_in_fill_price = #{payInFillPrice,jdbcType=DECIMAL},
      pay_in_main = #{payInMain,jdbcType=INTEGER},
      pay_in_buy = #{payInBuy,jdbcType=INTEGER},
      pay_in_sale = #{payInSale,jdbcType=INTEGER}
    where pay_in_id = #{payInId,jdbcType=INTEGER}
  </update>
</mapper>