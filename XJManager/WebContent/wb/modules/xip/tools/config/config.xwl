{"inframe":false,"title":"","hidden":false,"roles":{"default":1},"children":[{"configs":{"serverScript":"//---------------------获取当前模块语言对应的.json文件，放到request中----------------\ncom.xzsoft.xip.platform.util.XipUtil.getCurrentLang(request,\"xip/tools/config/json/config\");\n\nrequest.setAttribute(\"contextPath\", request.getContextPath());","itemId":"module"},"events":{"initialize":"var maxUid = 0;\nvar emptyUid = 0;\n\nfunction createSpilitForm(){\n  var panel = new Ext.panel.Panel({\n    id : \"emptyPanel_\" + emptyUid,\n    frame : true,\n    layout : \"column\",\n    width : '20px',\n    html : \"&nbsp;\",\n    xtype : \"panel\",\n    border : false,\n    baseCls : 'my-panel-no-border'\n  });\n\n  emptyUid++;\n  return panel;\n}\n\nfunction createDataSourceForm(record){\n  var uid = maxUid;\n\n  var newForm = new Ext.form.Panel({\n    id : \"dateSourceForm_\" + uid,\n    layout : \"form\",\n    bodyPadding : \"5 10 10 5\",\n    width : 400,\n    height : 500,\n    listeners:{\n      'afterrender':function(){\n        if(record!=null){\n          Ext.getCmp(\"dataSourceId_\" + uid).setReadOnly(true);\n        }else{\n          Ext.getCmp(\"dataSourceId_\" + uid).setReadOnly(false);\n        }\n      }\n    },\n    items : [{\n      id : \"panel1_\" + uid,\n      frame : true,\n      layout : \"column\",\n      columnWidth : .5,\n      xtype : \"panel\",\n      border : false,\n      baseCls : 'my-panel-no-border',\n      items : [ {\n        id : \"panel2_\" + uid,\n        frame : true,\n        layout : \"column\",\n        columnWidth : .96,\n        html : \"&nbsp;\",\n        xtype : \"panel\",\n        border : false,\n        baseCls : 'my-panel-no-border'\n      },{\n        id : \"btn_save_\" + uid,\n        iconCls : \"ok_icon\",\n        x : 5,\n        xtype : \"button\",\n        text : '{#xip_tools_config_saveBtn#}',\n        listeners:{\n          'click':function(){\n            var opType = Ext.getCmp(\"opType_\" + uid).getValue();\n            var dataSourceId = Ext.getCmp(\"dataSourceId_\" + uid).getValue();\n\n            if(Ext.isEmpty(dataSourceId)){\n              Wb.toast('{#xip_tools_config_sourceEmpty#}');\n              return;\n            }\n            \n            if(opType=='_added'){\n              if(app.dataSourceStore.find('dataSourceId',dataSourceId) != -1){\n                Wb.toast('{#xip_tools_config_sourceExist#}');\n                return;\n              }\n            }\n\n            //校验数据源配置项是否全部填写\n            if(!Ext.getCmp(\"dateSourceForm_\" + uid).getForm().isValid()){\n              Wb.toast('{#xip_tools_config_itemEmpty#}');\n              return;\n            }\n            \n            var driverClassNameVal = Ext.getCmp(\"driverClassName_\" + uid).getValue();\n            if(driverClassNameVal == 'other'){\n              driverClassNameVal = Ext.getCmp(\"driverClassNameView_\" + uid).getValue();\n            }\n\n            var json = \"{\" +\n                \"'driverClassName':'\" + driverClassNameVal + \"',\" +\n                \"'url':'\" + Ext.getCmp(\"jdbcUrl_\" + uid).getValue().replace(/\\'/g,\"\\\\'\") + \"',\" +\n                \"'username':'\" + Ext.getCmp(\"username_\" + uid).getValue() + \"',\" +\n                \"'password':'\" + Ext.getCmp(\"password_\" + uid).getValue() + \"',\" +\n                \"'filters':'\" + Ext.getCmp(\"filters_\" + uid).getValue() + \"',\" +\n                \"'maxActive':'\" + Ext.getCmp(\"maxActive_\" + uid).getValue() + \"',\" +\n                \"'initialSize':'\" + Ext.getCmp(\"initialSize_\" + uid).getValue() + \"',\" +\n                \"'poolPreparedStatements':'\" + Ext.getCmp(\"poolPreparedStatements_\" + uid).getValue() + \"',\" +\n                \"'maxOpenPreparedStatements':'\" + Ext.getCmp(\"maxOpenPreparedStatements_\" + uid).getValue() + \"',\" +\n                \"'validationQuery':'\" + Ext.getCmp(\"validationQuery_\" + uid).getValue() + \"',\" +\n                \"'testOnBorrow':'\" + Ext.getCmp(\"testOnBorrow_\" + uid).getValue() + \"',\" +\n                \"'testOnReturn':'\" + Ext.getCmp(\"testOnReturn_\" + uid).getValue() + \"',\" +\n                \"'testWhileIdle':'\" + Ext.getCmp(\"testWhileIdle_\" + uid).getValue() + \"',\" +\n                \"'connectionProperties':'config.decrypt=true',\" +\n                \"'timeBetweenEvictionRunsMillis':'\" + Ext.getCmp(\"timeBetweenEvictionRunsMillis_\" + uid).getValue() + \"'}\";\n\n            Ext.Msg.wait('{#xip_tools_config_requestWait#}');\n            Ext.Ajax.request({\n              url : '{#contextPath#}/platformAction.do?method=saveDataSource',\n              params:{\"dataSourceId\":dataSourceId,\"opType\":opType,\"modifyJson\":json},\n              method: 'POST',\n              success: function(response,options){\n                Ext.Msg.hide();\n                var temp = Ext.JSON.decode(response.responseText);\n                if(temp.flag==0){\n                  app.dataSourceStore.insert(0,json);\n                  app.dataSourceStore.commitChanges();\n                  if(opType=='_added'){\n                    Ext.getCmp(\"opType_\" + uid).setValue('_modified');\n                    Ext.getCmp(\"dataSourceId_\" + uid).setReadOnly(true);\n                  }\n                  Wb.toast('{#xip_tools_config_saveSuccess#}');\n                }else{\n                  Wb.toast('{#xip_tools_config_saveFailure#}'+resp.msg+'】');\n                }\n              },\n              failure: function(response,options){\n                Ext.Msg.hide();\n                Wb.toast('{#xip_tools_config_serverNotResponse#}');\n              }\n            });\n\n          }\n        }\n      }, {\n        id : \"btn_test_\" + uid,\n        iconCls : \"set_icon\",\n        x : 10,\n        xtype : \"button\",\n        text : '{#xip_tools_config_testBtn#}',\n        listeners:{\n          'click':function(){\n            Ext.Msg.wait('{#xip_tools_config_executeTest#}');\n            Ext.Ajax.request({\n              url : '{#contextPath#}/platformAction.do?method=DateSourceConnectionTest',\n              timeout:60*60*3600,\n              params:{\n                \"driverClassName\":Ext.getCmp(\"driverClassName_\" + uid).getValue(),\n                \"url\":Ext.getCmp(\"jdbcUrl_\" + uid).getValue().replace(/\\'/g,\"\\\\'\"),\n                \"username\":Ext.getCmp(\"username_\" + uid).getValue(),\n                \"password\":Ext.getCmp(\"password_\" + uid).getValue()\n              },\n              method: 'POST',\n              success: function(response,options){\n                Ext.Msg.hide();\n                var resultJson = Ext.JSON.decode(response.responseText);\n                if(resultJson.flag==true || resultJson.flag=='true'){\n                  Wb.toast('{#xip_tools_config_testSuccess#}');\n                }else{\n                  Wb.toast('{#xip_tools_config_testFailure#}'+resultJson.msg+'】');\n                }\n              },\n              failure: function(response,options){\n                Ext.Msg.hide();\n                Wb.toast('{#xip_tools_config_serverNotResponse#}');\n              }\n            });\n\n          }\n        }\n      }, {\n        id : \"btn_del_\" + uid,\n        iconCls : \"cancel_icon\",\n        x : 15,\n        xtype : \"button\",\n        hidden : record==null ? false : record.get('dataSourceId') == 'xipDefaultDS' ? true : false,\n        text : '{#xip_tools_config_delBtn#}',\n        listeners:{\n          'click':function(){\n            Ext.Msg.confirm('', '{#xip_tools_config_confirmDelete#}',function(btn){\n              if(btn=='yes'){\n\n                if(Ext.getCmp(\"opType_\" + uid) == '_added'){\n                  app.dataSourcesPanel.remove(Ext.getCmp(\"dateSourceForm_\" + uid), true);\n                  Wb.toast('{#xip_tools_config_deleteSuccess#}');\n                  return;\n                }else{\n                  var dataSourceId = Ext.getCmp(\"dataSourceId_\" + uid).getValue();\n\n                  Ext.Msg.wait('{#xip_tools_config_requestWait#}');\n                  Ext.Ajax.request({\n                    url : '{#contextPath#}/platformAction.do?method=delDataSourceById',\n                    params:{\"dataSourceId\":dataSourceId},\n                    method: 'POST',\n                    success: function(response,options){\n                      Ext.Msg.hide();\n                      app.dataSourcesPanel.remove(Ext.getCmp(\"dateSourceForm_\" + uid), true);\n                      app.dataSourceStore.remove(dataSourceStore.findRecord('dataSourceId',dataSourceId));\n                      Wb.toast('{#xip_tools_config_deleteSuccess#}');\n                    },\n                    failure: function(response,options){\n                      Ext.Msg.hide();\n                      Wb.toast('{#xip_tools_config_serverNotResponse#}');\n                    }\n                  });\n                }\n              }\n            });\n          }\n        }\n      } ]\n    },\n             {\n               id : \"dateSourceFieldSet_\" + uid,\n               title : '{#xip_tools_config_dataSourceTitle#}',\n               //collapsible : true,\n               layout : \"fit\",\n               xtype : \"fieldset\",\n               title : record==null ? '{#xip_tools_config_newDataSource#}' : '{#xip_tools_config_dataSourceTitle#}' + \":\"+record.get('dataSourceId'),\n               items : [\n                 {\n                   id : \"panel3_\" + uid,\n                   frame : true,\n                   layout : \"form\",\n                   columnWidth : .98,\n                   xtype : \"panel\",\n                   border : false,\n                   baseCls : 'my-panel-no-border',\n                   items : [ {\n                     id : \"dataSourceId_\" + uid,\n                     labelWidth : 150,\n                     allowBlank : false,\n                     labelAlign : \"right\",\n                     fieldLabel : '{#xip_tools_config_dataSourceTitle#}'+\"ID\",\n                     xtype : \"textfield\",\n                     value : record==null?\"\":record.get('dataSourceId')\n                   },{\n                     id : \"opType_\" + uid,\n                     labelWidth : 150,\n                     width : 250,\n                     labelAlign : \"right\",\n                     fieldLabel : '{#xip_tools_config_opType#}',\n                     xtype : \"textfield\",\n                     hidden : true,\n                     value : record==null?\"_added\":\"_modified\"\n                   } ]\n                 },\n                 {\n                   id : \"panel4_\" + uid,\n                   frame : true,\n                   layout : \"form\",\n                   columnWidth : .25,\n                   xtype : \"panel\",\n                   border : false,\n                   baseCls : 'my-panel-no-border',\n                   items : [ {\n                     id : \"driverClassName_\" + uid,\n                     labelWidth : 150,\n                     allowBlank : false,\n                     value : \"mysql\",\n                     labelAlign : \"right\",\n                     fieldLabel : '{#xip_tools_config_driverCategory#}',\n                     forceSelection : true,\n                     xtype : \"combobox\",\n                     minChars : 0,\n                     store : [[ 'com.mysql.jdbc.Driver', 'mysql' ],\n                              [ 'oracle.jdbc.driver.OracleDriver', 'oracle' ],\n                              [ 'other', 'other' ]\n                              ],\n                     forceList : false,\n                     value : record==null?\"com.mysql.jdbc.Driver\":((record.get('driverClassName')=='com.mysql.jdbc.Driver' || record.get('driverClassName')=='oracle.jdbc.driver.OracleDriver') ? record.get('driverClassName') : 'other'),\n                     listeners:{\n                       'select':function(comb){\n                         var value = comb.getValue();\n                         var temp_jdbcUrl = Ext.getCmp(\"jdbcUrl_\" + uid).getValue();\n                         if(value=='com.mysql.jdbc.Driver'){\n                           if(temp_jdbcUrl=='' || temp_jdbcUrl=='jdbc:oracle:thin:@ip:port:ServiceName'){\n                             Ext.getCmp(\"jdbcUrl_\" + uid).setValue('jdbc:mysql://ip:port/datebase');\n                           }else{\n                             if(temp_jdbcUrl.indexOf('oracle') != -1){\n                               Ext.getCmp(\"jdbcUrl_\" + uid).setValue('jdbc:mysql://ip:port/datebase');\n                             }\n                           }\n                           Ext.getCmp(\"validationQuery_\" + uid).setValue('select 1');\n                         }else{\n                           if(temp_jdbcUrl=='' || temp_jdbcUrl=='jdbc:mysql://ip:port/datebase'){\n                             Ext.getCmp(\"jdbcUrl_\" + uid).setValue('jdbc:oracle:thin:@ip:port:ServiceName');\n                           }else{\n                             if(temp_jdbcUrl.indexOf('mysql') != -1){\n                               Ext.getCmp(\"jdbcUrl_\" + uid).setValue('jdbc:oracle:thin:@ip:port:ServiceName');\n                             }\n                           }\n                           Ext.getCmp(\"validationQuery_\" + uid).setValue('select 1 from dual');\n                         }\n                         \n                         if(comb.getValue()=='other'){\n                           Ext.getCmp(\"driverClassNameView_\" + uid).setReadOnly(false);\n                           Ext.getCmp(\"driverClassNameView_\" + uid).setValue('');\n                         }else{\n                           Ext.getCmp(\"driverClassNameView_\" + uid).setValue(true);\n                           Ext.getCmp(\"driverClassNameView_\" + uid).setValue(comb.getValue());\n                         }\n                       },\n                       'beforeselect': function(combo, record, index, eOpts ){\n                         if(Ext.getCmp(\"dataSourceId_\" + uid).getValue() == 'xipDefaultDS' && record.data.field1=='other'){\n                           Wb.toast('{#xip_tools_config_defaultDsCanNotSelectOther#}');\n                           return false;\n                         }\n                       }\n                     }\n                   } ]\n                 },\n                 {\n                   id : \"panel18_\" + uid,\n                   frame : true,\n                   layout : \"form\",\n                   columnWidth : .5,\n                   xtype : \"panel\",\n                   border : false,\n                   baseCls : 'my-panel-no-border',\n                   items : [ {\n                     id : \"driverClassNameView_\" + uid,\n                     labelWidth : 150,\n                     allowBlank : false,\n                     labelAlign : \"right\",\n                     fieldLabel : '{#xip_tools_config_driverCategory#}',\n                     readOnly : record==null ? true : ((record.get('driverClassName')=='com.mysql.jdbc.Driver' || record.get('driverClassName')=='oracle.jdbc.driver.OracleDriver') ? true : false),\n                     xtype : \"textfield\",\n                     value : record==null ? 'com.mysql.jdbc.Driver' : record.get('driverClassName')\n                   } ]\n                 },\n                 {\n                   id : \"panel5_\" + uid,\n                   frame : true,\n                   layout : \"form\",\n                   columnWidth : .5,\n                   xtype : \"panel\",\n                   border : false,\n                   baseCls : 'my-panel-no-border',\n                   items : [ {\n                     id : \"jdbcUrl_\" + uid,\n                     labelWidth : 150,\n                     allowBlank : false,\n                     labelAlign : \"right\",\n                     fieldLabel : '{#xip_tools_config_linkUrl#}',\n                     xtype : \"textfield\",\n                     value : record==null?\"jdbc:mysql://ip:port/datebase\":record.get('url')\n                   } ]\n                 },\n                 {\n                   id : \"panel6_\" + uid,\n                   frame : true,\n                   layout : \"form\",\n                   columnWidth : .25,\n                   xtype : \"panel\",\n                   border : false,\n                   baseCls : 'my-panel-no-border',\n                   items : [ {\n                     id : \"username_\" + uid,\n                     labelWidth : 150,\n                     allowBlank : false,\n                     labelAlign : \"right\",\n                     fieldLabel : '{#xip_tools_config_userName#}',\n                     xtype : \"textfield\",\n                     value : record==null?\"\":record.get('username')\n                   } ]\n                 },\n                 {\n                   id : \"panel7_\" + uid,\n                   frame : true,\n                   layout : \"form\",\n                   columnWidth : .25,\n                   xtype : \"panel\",\n                   border : false,\n                   baseCls : 'my-panel-no-border',\n                   items : [ {\n                     id : \"password_\" + uid,\n                     labelWidth : 150,\n                     allowBlank : false,\n                     labelAlign : \"right\",\n                     fieldLabel : '{#xip_tools_config_linkPassword#}',\n                     xtype : \"textfield\",\n                     inputType: 'password',\n                     value : record==null?\"\":record.get('password')\n                   } ]\n                 },\n                 {\n                   id : \"panel8_\" + uid,\n                   layout : \"form\",\n                   columnWidth : .25,\n                   xtype : \"panel\",\n                   baseCls : 'my-panel-no-border',\n                   items : [ {\n                     id : \"initialSize_\" + uid,\n                     labelWidth : 150,\n                     allowBlank : false,\n                     //value : \"20\",\n                     labelAlign : \"right\",\n                     fieldLabel : '{#xip_tools_config_linkNumber#}',\n                     xtype : \"textfield\",\n                     value : record==null?\"2\":record.get('initialSize')\n                   } ]\n                 },\n                 {\n                   id : \"panel9_\" + uid,\n                   frame : true,\n                   layout : \"form\",\n                   columnWidth : .25,\n                   xtype : \"panel\",\n                   border : false,\n                   baseCls : 'my-panel-no-border',\n                   items : [ {\n                     id : \"maxActive_\" + uid,\n                     labelWidth : 150,\n                     allowBlank : false,\n                     //value : \"20\",\n                     labelAlign : \"right\",\n                     fieldLabel : '{#xip_tools_config_linkMaxNumber#}',\n                     xtype : \"textfield\",\n                     value : record==null?\"5\":record.get('maxActive')\n                   } ]\n                 },\n                 {\n                   id : \"panel10_\" + uid,\n                   frame : true,\n                   layout : \"form\",\n                   columnWidth : .25,\n                   xtype : \"panel\",\n                   border : false,\n                   baseCls : 'my-panel-no-border',\n                   items : [ {\n                     id : \"poolPreparedStatements_\" + uid,\n                     labelWidth : 150,\n                     allowBlank : false,\n                     //value : \"false\",\n                     labelAlign : \"right\",\n                     fieldLabel : '{#xip_tools_config_cachePs#}',\n                     forceSelection : true,\n                     xtype : \"combobox\",\n                     minChars : 0,\n                     store : [ [ 'true', '{#xip_tools_config_yes#}'],\n                              [ 'false', '{#xip_tools_config_no#}'] ],\n                     forceList : false,\n                     value : record==null?\"false\":record.get('poolPreparedStatements')\n                   } ]\n                 },\n                 {\n                   id : \"panel11_\" + uid,\n                   frame : true,\n                   layout : \"form\",\n                   columnWidth : .25,\n                   xtype : \"panel\",\n                   border : false,\n                   baseCls : 'my-panel-no-border',\n                   items : [ {\n                     id : \"maxOpenPreparedStatements_\" + uid,\n                     labelWidth : 150,\n                     allowBlank : false,\n                     //value : \"200\",\n                     labelAlign : \"right\",\n                     fieldLabel : '{#xip_tools_config_maxPs#}',\n                     xtype : \"textfield\",\n                     value : record==null?\"200\":record.get('maxOpenPreparedStatements')\n                   } ]\n                 },\n                 {\n                   id : \"panel12_\" + uid,\n                   frame : true,\n                   layout : \"form\",\n                   columnWidth : .5,\n                   xtype : \"panel\",\n                   border : false,\n                   baseCls : 'my-panel-no-border',\n                   items : [ {\n                     id : \"validationQuery_\" + uid,\n                     labelWidth : 150,\n                     allowBlank : false,\n                     //value : \"select 1 from wb_dual\",\n                     labelAlign : \"right\",\n                     fieldLabel : '{#xip_tools_config_linkCheckSql#}',\n                     xtype : \"textfield\",\n                     //readOnly : true,\n                     value : record==null?\"select 1\":record.get('validationQuery')\n                   } ]\n                 },\n                 {\n                   id : \"panel13_\" + uid,\n                   frame : true,\n                   layout : \"form\",\n                   columnWidth : .25,\n                   xtype : \"panel\",\n                   border : false,\n                   baseCls : 'my-panel-no-border',\n                   items : [ {\n                     id : \"timeBetweenEvictionRunsMillis_\" + uid,\n                     labelWidth : 150,\n                     allowBlank : false,\n                     //value : \"60000\",\n                     labelAlign : \"right\",\n                     fieldLabel : '{#xip_tools_config_linkTimeout#}',\n                     xtype : \"textfield\",\n                     value : record==null?\"60000\":record.get('timeBetweenEvictionRunsMillis')\n                   } ]\n                 },\n                 {\n                   id : \"panel14_\" + uid,\n                   frame : true,\n                   layout : \"form\",\n                   columnWidth : .25,\n                   xtype : \"panel\",\n                   border : false,\n                   baseCls : 'my-panel-no-border',\n                   items : [ {\n                     id : \"testOnBorrow_\" + uid,\n                     labelWidth : 150,\n                     allowBlank : false,\n                     //value : \"true\",\n                     labelAlign : \"right\",\n                     fieldLabel : '{#xip_tools_config_beforeConnectCheck#}',\n                     forceSelection : true,\n                     xtype : \"combobox\",\n                     minChars : 0,\n                     store : [ [ 'true', '{#xip_tools_config_yes#}'],\n                              [ 'false', '{#xip_tools_config_no#}'] ],\n                     forceList : false,\n                     value : record==null?\"true\":record.get('testOnBorrow')\n                   } ]\n                 },\n                 {\n                   id : \"panel15_\" + uid,\n                   frame : true,\n                   layout : \"form\",\n                   columnWidth : .25,\n                   xtype : \"panel\",\n                   border : false,\n                   baseCls : 'my-panel-no-border',\n                   items : [ {\n                     id : \"testWhileIdle_\" + uid,\n                     labelWidth : 150,\n                     allowBlank : false,\n                     //value : \"true\",\n                     labelAlign : \"right\",\n                     fieldLabel : '{#xip_tools_config_applyConnectCheck#}',\n                     forceSelection : true,\n                     xtype : \"combobox\",\n                     minChars : 0,\n                     store : [ [ 'true', '{#xip_tools_config_yes#}'],\n                              [ 'false', '{#xip_tools_config_no#}'] ],\n                     forceList : false,\n                     value : record==null?\"false\":record.get('testOnReturn')\n                   } ]\n                 },\n                 {\n                   id : \"panel16_\" + uid,\n                   frame : true,\n                   layout : \"form\",\n                   columnWidth : .25,\n                   xtype : \"panel\",\n                   border : false,\n                   baseCls : 'my-panel-no-border',\n                   items : [ {\n                     id : \"testOnReturn_\" + uid,\n                     labelWidth : 150,\n                     allowBlank : false,\n                     //value : \"false\",\n                     labelAlign : \"right\",\n                     fieldLabel : '{#xip_tools_config_returnConnectCheck#}',\n                     forceSelection : true,\n                     xtype : \"combobox\",\n                     minChars : 0,\n                     store : [ [ 'true', '{#xip_tools_config_yes#}'],\n                              [ 'false', '{#xip_tools_config_no#}'] ],\n                     forceList : false,\n                     value : record==null?\"true\":record.get('testWhileIdle')\n                   } ]\n                 },\n                 {\n                   id : \"panel17_\" + uid,\n                   frame : true,\n                   layout : \"form\",\n                   columnWidth : .25,\n                   xtype : \"panel\",\n                   border : false,\n                   hidden:true,\n                   baseCls : 'my-panel-no-border',\n                   items : [ {\n                     id : \"filters_\" + uid,\n                     labelWidth : 150,\n                     allowBlank : false,\n                     //value : \"stat\",\n                     labelAlign : \"right\",\n                     fieldLabel : '{#xip_tools_config_extendPlugins#}',\n                     //forceSelection : true,\n                     //xtype : \"combobox\",\n                     xtype : \"textfield\",\n                     //minChars : 0,\n                     //store : [ [ 'stat', '监控统计' ],\n                     //         [ 'log4j', '日志' ],\n                     //         [ 'wall', '防注入' ] ],\n                     //forceList : false,\n                     value : 'config'\n                   } ]\n                 } ]\n             }]\n\n  });\n  maxUid = maxUid + 1;\n  return newForm;\n}"},"children":[{"configs":{"pageSize":"-1","autoLoad":"true","itemId":"dataSourceStore","url":"{#contextPath#}/platformAction.do?method=getDataSources","fields":"[\n  {name:'dataSourceId'},\n  {name:'driverClassName'},\n  {name:'url'},\n  {name:'username'},\n  {name:'password'},\n  {name:'filters'},\n  {name:'maxActive'},\n  {name:'initialSize'},\n  {name:'poolPreparedStatements'},\n  {name:'maxOpenPreparedStatements'},\n  {name:'validationQuery'},\n  {name:'testOnBorrow'},\n  {name:'testOnReturn'},\n  {name:'testWhileIdle'},\n  {name:'timeBetweenEvictionRunsMillis'}\n]"},"events":{"load":"app.dataSourcesPanel.removeAll();\nfor(var i=0; i<records.length; i++){\n  var record = records[i];\n\n  app.dataSourcesPanel.add(createDataSourceForm(record));\n}"},"children":[],"expanded":false,"type":"store"},{"configs":{"itemId":"dsTbar"},"children":[{"configs":{"text":"-","itemId":"sp1"},"children":[],"expanded":false,"type":"item"},{"configs":{"text":"{#xip_tools_config_addBtn#}","itemId":"addBtn","iconCls":"file_add_icon"},"events":{"click":"app.dataSourcesPanel.add(createDataSourceForm(null));"},"children":[],"expanded":false,"type":"item"},{"configs":{"text":"-","itemId":"sp2"},"children":[],"expanded":false,"type":"item"}],"expanded":true,"type":"toolbar"},{"configs":{"itemId":"topbar"},"children":[{"configs":{"text":"->","itemId":"item1"},"children":[],"expanded":false,"type":"item"},{"configs":{"text":"中文","width":"70","itemId":"btnChiness"},"events":{"click":"Ext.Ajax.request({\n       url  : 'platformAction.do?method=lanInsertInSession',\n       params : {\n             'language' : \"zh\"},\n       method:'post',\n       success: function(response,options){\n         //刷新页面重新加载JS\n          location.reload();\n       },\n       failure: function(){\n       }\n     });"},"children":[],"expanded":false,"type":"button"},{"configs":{"text":"English","width":"70","itemId":"btnEnglish"},"events":{"click":"Ext.Ajax.request({\n       url  : 'platformAction.do?method=lanInsertInSession',\n       params : {\n             'language' : \"en\"},\n       method:'post',\n       success: function(response,options){\n         //刷新页面重新加载JS\n          location.reload();\n       },\n       failure: function(){\n       }\n     });"},"children":[],"expanded":true,"type":"button"}],"expanded":true,"type":"toolbar"},{"configs":{"layout":"border","itemId":"viewport"},"children":[{"configs":{"tbar":"app.topbar","region":"north","itemId":"panel1"},"children":[],"expanded":false,"type":"panel"},{"configs":{"region":"center","itemId":"tabPanel"},"children":[{"configs":{"title":"{#xip_tools_config_baseConfigPanel#}","layout":"border","itemId":"baseConfigPanel"},"children":[{"configs":{"region":"center","itemId":"baseConfigGrid","editable":"true"},"events":{"tagEvents":"'beforeedit':function( editor, e, eOpts){\n  if(e.colIdx ==3){\n    if(e.record.get('name')=='redis.pass'){\n      app.configItemValueCol.setEditor({xtype:\"textfield\", inputType:'password'});\n    }else{\n      app.configItemValueCol.setEditor({xtype:\"textfield\"});\n    }\n  }\n}"},"children":[{"configs":{"itemId":"tbar"},"children":[{"configs":{"text":"-","itemId":"sp1"},"children":[],"expanded":false,"type":"item"},{"configs":{"text":"{#xip_tools_config_saveBtn#}","itemId":"saveBtn","iconCls":"save_icon"},"events":{"click":"var propertyStore = app.baseConfigGrid.getStore();\n\nvar modifies = propertyStore.getModifiedRecords();\n\nif(modifies==='' || modifies.length===0){\n  Wb.toast('{#xip_tools_config_notModifiedRecord#}');\n  return;\n}\n\n//如果启用多租户，必须启用redis\nvar findRowNum = propertyStore.find(\"name\",\"xip.useMultitenant\");\nif(findRowNum != -1){\n  var record = propertyStore.getAt(findRowNum);\n  var userMulti = record.get(\"value\");\n  if(userMulti=='true'){\n    var findRowNumR = propertyStore.find(\"name\",\"xip.useRedis\");\n    if(findRowNumR!=-1){\n      var rRecord = propertyStore.getAt(findRowNumR);\n      if(rRecord.get('value') != 'true'){\n        Wb.toast('{#xip_tools_config_useRedis#}');\n        return;\n      }\n    }\n  }\n}\n\n//启用redis 必须设置密码\n/*var findRowNumR = propertyStore.find(\"name\",\"xip.useRedis\");\nif(findRowNumR!=-1){\n  var rRecord = propertyStore.getAt(findRowNumR);\n  if(rRecord.get('value') == 'true'){\n    var findRowNumPwd = propertyStore.find(\"name\",\"redis.pass\");\n    if(findRowNumPwd!=-1){\n      var pwsRecord = propertyStore.getAt(findRowNumPwd);\n      if(Ext.isEmpty(pwsRecord.get('value'))){\n        Ext.Msg.alert(XipLang.xwf_lang_notice,'redis已启用，请设置密码');\n        return;\n      }\n    }\n  }\n}*/\n\nvar json = \"{\";\nfor(var i=0; i<modifies.length; i++){\n  var record = modifies[i];\n  json = json + \"'\" +record.get('name') + \"':'\" + encodeURI(record.get('value')).replace(/\\'/g,\"\\\\'\") + \"',\";\n}\njson = json.substring(0, json.length-1);\njson = json + \"}\";\n\n//var json = Ext.JSON.encode(json);\n\nExt.Msg.wait('{#xip_tools_config_saveWait#}');\nExt.Ajax.request({\n  url: '{#contextPath#}/platformAction.do?method=saveProperties',\n  params:{\"modifyJson\":json},\n  method: 'POST',\n  success: function(response,options){\n    Ext.Msg.hide();\n    var temp = response.responseText;\n    var resp = Ext.JSON.decode(temp);\n    if(resp.flag=='0'){\n      Wb.toast('{#xip_tools_config_saveSuccess#}');\n      propertyStore.load();\n    }else{\n      Wb.toast('{#xip_tools_config_saveFailure#}'+resp.msg+'】');\n    }\n  },\n  failure: function(response,options){\n    Ext.Msg.hide();\n    Wb.toast('{#xip_tools_config_serverNotResponse#}');\n  }\n});"},"children":[],"expanded":false,"type":"item"},{"configs":{"text":"-","itemId":"sp2"},"children":[],"expanded":false,"type":"item"}],"expanded":true,"type":"toolbar"},{"configs":{"itemId":"columns"},"children":[{"configs":{"text":"{#xip_tools_config_numberCol#}","width":"60","align":"center","xtype":"rownumberer","titleAlign":"center","itemId":"numberCol"},"children":[],"expanded":false,"type":"column"},{"configs":{"text":"{#xip_tools_config_configItemCol#}","width":"220","dataIndex":"name","itemId":"configItemCol"},"children":[],"expanded":false,"type":"column"},{"configs":{"text":"{#xip_tools_config_configItemValueCol#}","width":"320","dataIndex":"value","itemId":"configItemValueCol","renderer":"if(record.get('name')=='redis.pass'){\n  if(!Ext.isEmpty(value)){\n    var result = '';\n    for(var i=0; i<value.length; i++){\n      result = result + '●';\n    }\n    return result;\n  }\n}\nreturn value;"},"children":[{"configs":{"itemId":"editor"},"children":[],"expanded":false,"type":"text"}],"expanded":false,"type":"column"},{"configs":{"text":"{#xip_tools_config_descriptionCol#}","width":"400","dataIndex":"note","itemId":"descriptionCol"},"children":[],"expanded":false,"type":"column"}],"expanded":true,"type":"array"},{"configs":{"pageSize":"-1","autoLoad":"true","itemId":"store","url":"{#contextPath#}/platformAction.do?method=getProperties","fields":"[\n  {name:'dataSourceId'},\n  {name:'driverClassName'},\n  {name:'url'},\n  {name:'username'},\n  {name:'password'},\n  {name:'filters'},\n  {name:'maxActive'},\n  {name:'initialSize'},\n  {name:'poolPreparedStatements'},\n  {name:'maxOpenPreparedStatements'},\n  {name:'validationQuery'},\n  {name:'testOnBorrow'},\n  {name:'testOnReturn'},\n  {name:'testWhileIdle'},\n  {name:'timeBetweenEvictionRunsMillis'}\n]"},"events":{"load":"store.sort('name', 'ASC');"},"children":[],"expanded":false,"type":"store"}],"expanded":true,"type":"grid"}],"expanded":true,"type":"panel"},{"configs":{"tbar":"app.dsTbar","title":"{#xip_tools_config_dataSourcesPanel#}","layout":"column","itemId":"dataSourcesPanel"},"children":[],"expanded":true,"type":"panel"}],"expanded":true,"type":"tab"}],"expanded":true,"type":"viewport"}],"expanded":true,"type":"module"}],"pageLink":"","iconCls":""}